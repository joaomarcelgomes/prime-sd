
services:
  web:
    image: joaomarcelogomes7/prime-web:latest
    container_name: web_frontend
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - order_api
      - notification_api
      - payment_api
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - order_network

  payment_api:
    image: joaomarcelogomes7/prime-payment_api
    container_name: payment_api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - order_network

  notification_api:
    image: joaomarcelogomes7/prime-notification_api:latest
    container_name: notification_api
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - order_network

  order_api:
    image: joaomarcelogomes7/prime-order_api:latest
    container_name: order_api
    restart: always
    ports:
      - "5146:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - order_network

  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: prime
      POSTGRES_PASSWORD: prime
      POSTGRES_DB: order_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prime -d order_system"]
      interval: 10s
      retries: 5
    networks:
      - order_network

networks:
  order_network:
    driver: bridge

volumes:
  postgres_data: